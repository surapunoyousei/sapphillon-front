// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file tab_manager.proto (package sapphillon.v1.tabmanager, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tab_manager.proto.
 */
export const file_tab_manager: GenFile = /*@__PURE__*/
  fileDesc("ChF0YWJfbWFuYWdlci5wcm90bxIYc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyIkAKEENyZWF0ZVRhYk9wdGlvbnMSGgoNaW5fYmFja2dyb3VuZBgBIAEoCEgAiAEBQhAKDl9pbl9iYWNrZ3JvdW5kInIKFUNyZWF0ZUluc3RhbmNlUmVxdWVzdBILCgN1cmwYASABKAkSQAoHb3B0aW9ucxgCIAEoCzIqLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5DcmVhdGVUYWJPcHRpb25zSACIAQFCCgoIX29wdGlvbnMiLQoWQ3JlYXRlSW5zdGFuY2VSZXNwb25zZRITCgtpbnN0YW5jZV9pZBgBIAEoCSIoChJBdHRhY2hUb1RhYlJlcXVlc3QSEgoKYnJvd3Nlcl9pZBgBIAEoCSI/ChNBdHRhY2hUb1RhYlJlc3BvbnNlEhgKC2luc3RhbmNlX2lkGAEgASgJSACIAQFCDgoMX2luc3RhbmNlX2lkIhEKD0xpc3RUYWJzUmVxdWVzdCJLChBMaXN0VGFic1Jlc3BvbnNlEjcKBHRhYnMYASADKAsyKS5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuRGV0YWlsZWRUYWJJbmZvIi0KFkdldEluc3RhbmNlSW5mb1JlcXVlc3QSEwoLaW5zdGFuY2VfaWQYASABKAkiRwoXR2V0SW5zdGFuY2VJbmZvUmVzcG9uc2USGgoNaW5zdGFuY2VfaW5mbxgBIAEoCUgAiAEBQhAKDl9pbnN0YW5jZV9pbmZvIi0KFkRlc3Ryb3lJbnN0YW5jZVJlcXVlc3QSEwoLaW5zdGFuY2VfaWQYASABKAkiKgoXRGVzdHJveUluc3RhbmNlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIzCg9OYXZpZ2F0ZVJlcXVlc3QSEwoLaW5zdGFuY2VfaWQYASABKAkSCwoDdXJsGAIgASgJIlEKEE5hdmlnYXRlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIaCg1lcnJvcl9tZXNzYWdlGAIgASgJSACIAQFCEAoOX2Vycm9yX21lc3NhZ2UiJAoNR2V0VVJJUmVxdWVzdBITCgtpbnN0YW5jZV9pZBgBIAEoCSIdCg5HZXRVUklSZXNwb25zZRILCgN1cmkYASABKAkiJQoOR2V0SFRNTFJlcXVlc3QSEwoLaW5zdGFuY2VfaWQYASABKAkiLQoPR2V0SFRNTFJlc3BvbnNlEhEKBGh0bWwYASABKAlIAIgBAUIHCgVfaHRtbCI6ChFHZXRFbGVtZW50UmVxdWVzdBITCgtpbnN0YW5jZV9pZBgBIAEoCRIQCghzZWxlY3RvchgCIAEoCSJAChJHZXRFbGVtZW50UmVzcG9uc2USGQoMZWxlbWVudF9odG1sGAEgASgJSACIAQFCDwoNX2VsZW1lbnRfaHRtbCI+ChVHZXRFbGVtZW50VGV4dFJlcXVlc3QSEwoLaW5zdGFuY2VfaWQYASABKAkSEAoIc2VsZWN0b3IYAiABKAkiNAoWR2V0RWxlbWVudFRleHRSZXNwb25zZRIRCgR0ZXh0GAEgASgJSACIAQFCBwoFX3RleHQiOAoPR2V0VmFsdWVSZXF1ZXN0EhMKC2luc3RhbmNlX2lkGAEgASgJEhAKCHNlbGVjdG9yGAIgASgJIjAKEEdldFZhbHVlUmVzcG9uc2USEgoFdmFsdWUYASABKAlIAIgBAUIICgZfdmFsdWUiPAoTQ2xpY2tFbGVtZW50UmVxdWVzdBITCgtpbnN0YW5jZV9pZBgBIAEoCRIQCghzZWxlY3RvchgCIAEoCSInChRDbGlja0VsZW1lbnRSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIImAKFVdhaXRGb3JFbGVtZW50UmVxdWVzdBITCgtpbnN0YW5jZV9pZBgBIAEoCRIQCghzZWxlY3RvchgCIAEoCRIUCgd0aW1lb3V0GAMgASgFSACIAQFCCgoIX3RpbWVvdXQiJwoWV2FpdEZvckVsZW1lbnRSZXNwb25zZRINCgVmb3VuZBgBIAEoCCI7ChRFeGVjdXRlU2NyaXB0UmVxdWVzdBITCgtpbnN0YW5jZV9pZBgBIAEoCRIOCgZzY3JpcHQYAiABKAkiVgoVRXhlY3V0ZVNjcmlwdFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSGgoNZXJyb3JfbWVzc2FnZRgCIAEoCUgAiAEBQhAKDl9lcnJvcl9tZXNzYWdlInoKDlNjcmVlbnNob3RSZWN0Eg4KAXgYASABKAVIAIgBARIOCgF5GAIgASgFSAGIAQESEgoFd2lkdGgYAyABKAVIAogBARITCgZoZWlnaHQYBCABKAVIA4gBAUIECgJfeEIECgJfeUIICgZfd2lkdGhCCQoHX2hlaWdodCLOAQoVVGFrZVNjcmVlbnNob3RSZXF1ZXN0EhMKC2luc3RhbmNlX2lkGAEgASgJEjYKBHR5cGUYAiABKA4yKC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuU2NyZWVuc2hvdFR5cGUSFQoIc2VsZWN0b3IYAyABKAlIAIgBARI7CgRyZWN0GAQgASgLMiguc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLlNjcmVlbnNob3RSZWN0SAGIAQFCCwoJX3NlbGVjdG9yQgcKBV9yZWN0IkoKFlRha2VTY3JlZW5zaG90UmVzcG9uc2USHAoPc2NyZWVuc2hvdF9kYXRhGAEgASgJSACIAQFCEgoQX3NjcmVlbnNob3RfZGF0YSKjAQoPRmlsbEZvcm1SZXF1ZXN0EhMKC2luc3RhbmNlX2lkGAEgASgJEkoKCWZvcm1fZGF0YRgCIAMoCzI3LnNhcHBoaWxsb24udjEudGFibWFuYWdlci5GaWxsRm9ybVJlcXVlc3QuRm9ybURhdGFFbnRyeRovCg1Gb3JtRGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiIwoQRmlsbEZvcm1SZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIjoKEVN1Ym1pdEZvcm1SZXF1ZXN0EhMKC2luc3RhbmNlX2lkGAEgASgJEhAKCHNlbGVjdG9yGAIgASgJIiUKElN1Ym1pdEZvcm1SZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIiMKC1dhaXRSZXF1ZXN0EhQKDG1pbGxpc2Vjb25kcxgBIAEoBSIfCgxXYWl0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCLzAQoPRGV0YWlsZWRUYWJJbmZvEhMKC2luc3RhbmNlX2lkGAEgASgJEhIKCmJyb3dzZXJfaWQYAiABKAkSCwoDdXJpGAMgASgJEg0KBXRpdGxlGAQgASgJEhgKC2Zhdmljb25fdXJsGAUgASgJSACIAQESEQoJaXNfYWN0aXZlGAYgASgIEi4KCmNyZWF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQg4KDF9mYXZpY29uX3VybCqnAQoOU2NyZWVuc2hvdFR5cGUSHwobU0NSRUVOU0hPVF9UWVBFX1VOU1BFQ0lGSUVEEAASHAoYU0NSRUVOU0hPVF9UWVBFX1ZJRVdQT1JUEAESGwoXU0NSRUVOU0hPVF9UWVBFX0VMRU1FTlQQAhIdChlTQ1JFRU5TSE9UX1RZUEVfRlVMTF9QQUdFEAMSGgoWU0NSRUVOU0hPVF9UWVBFX1JFR0lPThAEMr8OChFUYWJNYW5hZ2VyU2VydmljZRJzCg5DcmVhdGVJbnN0YW5jZRIvLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5DcmVhdGVJbnN0YW5jZVJlcXVlc3QaMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuQ3JlYXRlSW5zdGFuY2VSZXNwb25zZRJqCgtBdHRhY2hUb1RhYhIsLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5BdHRhY2hUb1RhYlJlcXVlc3QaLS5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuQXR0YWNoVG9UYWJSZXNwb25zZRJhCghMaXN0VGFicxIpLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5MaXN0VGFic1JlcXVlc3QaKi5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuTGlzdFRhYnNSZXNwb25zZRJ2Cg9HZXRJbnN0YW5jZUluZm8SMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuR2V0SW5zdGFuY2VJbmZvUmVxdWVzdBoxLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5HZXRJbnN0YW5jZUluZm9SZXNwb25zZRJ2Cg9EZXN0cm95SW5zdGFuY2USMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuRGVzdHJveUluc3RhbmNlUmVxdWVzdBoxLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5EZXN0cm95SW5zdGFuY2VSZXNwb25zZRJhCghOYXZpZ2F0ZRIpLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5OYXZpZ2F0ZVJlcXVlc3QaKi5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuTmF2aWdhdGVSZXNwb25zZRJbCgZHZXRVUkkSJy5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuR2V0VVJJUmVxdWVzdBooLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5HZXRVUklSZXNwb25zZRJeCgdHZXRIVE1MEiguc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkdldEhUTUxSZXF1ZXN0Gikuc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkdldEhUTUxSZXNwb25zZRJnCgpHZXRFbGVtZW50Eisuc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkdldEVsZW1lbnRSZXF1ZXN0Giwuc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkdldEVsZW1lbnRSZXNwb25zZRJzCg5HZXRFbGVtZW50VGV4dBIvLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5HZXRFbGVtZW50VGV4dFJlcXVlc3QaMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuR2V0RWxlbWVudFRleHRSZXNwb25zZRJhCghHZXRWYWx1ZRIpLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5HZXRWYWx1ZVJlcXVlc3QaKi5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuR2V0VmFsdWVSZXNwb25zZRJtCgxDbGlja0VsZW1lbnQSLS5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuQ2xpY2tFbGVtZW50UmVxdWVzdBouLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5DbGlja0VsZW1lbnRSZXNwb25zZRJzCg5XYWl0Rm9yRWxlbWVudBIvLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5XYWl0Rm9yRWxlbWVudFJlcXVlc3QaMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuV2FpdEZvckVsZW1lbnRSZXNwb25zZRJwCg1FeGVjdXRlU2NyaXB0Ei4uc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkV4ZWN1dGVTY3JpcHRSZXF1ZXN0Gi8uc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLkV4ZWN1dGVTY3JpcHRSZXNwb25zZRJzCg5UYWtlU2NyZWVuc2hvdBIvLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5UYWtlU2NyZWVuc2hvdFJlcXVlc3QaMC5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuVGFrZVNjcmVlbnNob3RSZXNwb25zZRJhCghGaWxsRm9ybRIpLnNhcHBoaWxsb24udjEudGFibWFuYWdlci5GaWxsRm9ybVJlcXVlc3QaKi5zYXBwaGlsbG9uLnYxLnRhYm1hbmFnZXIuRmlsbEZvcm1SZXNwb25zZRJnCgpTdWJtaXRGb3JtEisuc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLlN1Ym1pdEZvcm1SZXF1ZXN0Giwuc2FwcGhpbGxvbi52MS50YWJtYW5hZ2VyLlN1Ym1pdEZvcm1SZXNwb25zZWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * Options for creating a new tab
 *
 * @generated from message sapphillon.v1.tabmanager.CreateTabOptions
 */
export type CreateTabOptions = Message<"sapphillon.v1.tabmanager.CreateTabOptions"> & {
  /**
   * Whether to open tab in background
   *
   * @generated from field: optional bool in_background = 1;
   */
  inBackground?: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.CreateTabOptions.
 * Use `create(CreateTabOptionsSchema)` to create a new message.
 */
export const CreateTabOptionsSchema: GenMessage<CreateTabOptions> = /*@__PURE__*/
  messageDesc(file_tab_manager, 0);

/**
 * Request to create a new visible tab
 *
 * @generated from message sapphillon.v1.tabmanager.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"sapphillon.v1.tabmanager.CreateInstanceRequest"> & {
  /**
   * URL to open in new tab
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * Optional creation options
   *
   * @generated from field: optional sapphillon.v1.tabmanager.CreateTabOptions options = 2;
   */
  options?: CreateTabOptions;
};

/**
 * Describes the message sapphillon.v1.tabmanager.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 1);

/**
 * Response containing new tab instance ID
 *
 * @generated from message sapphillon.v1.tabmanager.CreateInstanceResponse
 */
export type CreateInstanceResponse = Message<"sapphillon.v1.tabmanager.CreateInstanceResponse"> & {
  /**
   * Instance ID for the new tab
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.CreateInstanceResponse.
 * Use `create(CreateInstanceResponseSchema)` to create a new message.
 */
export const CreateInstanceResponseSchema: GenMessage<CreateInstanceResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 2);

/**
 * Request to attach to existing tab
 *
 * @generated from message sapphillon.v1.tabmanager.AttachToTabRequest
 */
export type AttachToTabRequest = Message<"sapphillon.v1.tabmanager.AttachToTabRequest"> & {
  /**
   * Browser ID of the existing tab
   *
   * @generated from field: string browser_id = 1;
   */
  browserId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.AttachToTabRequest.
 * Use `create(AttachToTabRequestSchema)` to create a new message.
 */
export const AttachToTabRequestSchema: GenMessage<AttachToTabRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 3);

/**
 * Response for attach operation
 *
 * @generated from message sapphillon.v1.tabmanager.AttachToTabResponse
 */
export type AttachToTabResponse = Message<"sapphillon.v1.tabmanager.AttachToTabResponse"> & {
  /**
   * Instance ID for the attached tab (null if failed)
   *
   * @generated from field: optional string instance_id = 1;
   */
  instanceId?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.AttachToTabResponse.
 * Use `create(AttachToTabResponseSchema)` to create a new message.
 */
export const AttachToTabResponseSchema: GenMessage<AttachToTabResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 4);

/**
 * Request to list all visible tabs
 *
 * @generated from message sapphillon.v1.tabmanager.ListTabsRequest
 */
export type ListTabsRequest = Message<"sapphillon.v1.tabmanager.ListTabsRequest"> & {
};

/**
 * Describes the message sapphillon.v1.tabmanager.ListTabsRequest.
 * Use `create(ListTabsRequestSchema)` to create a new message.
 */
export const ListTabsRequestSchema: GenMessage<ListTabsRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 5);

/**
 * Response containing tabs information
 *
 * @generated from message sapphillon.v1.tabmanager.ListTabsResponse
 */
export type ListTabsResponse = Message<"sapphillon.v1.tabmanager.ListTabsResponse"> & {
  /**
   * Array of detailed tab information (instead of JSON string)
   *
   * @generated from field: repeated sapphillon.v1.tabmanager.DetailedTabInfo tabs = 1;
   */
  tabs: DetailedTabInfo[];
};

/**
 * Describes the message sapphillon.v1.tabmanager.ListTabsResponse.
 * Use `create(ListTabsResponseSchema)` to create a new message.
 */
export const ListTabsResponseSchema: GenMessage<ListTabsResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 6);

/**
 * Request to get instance information
 *
 * @generated from message sapphillon.v1.tabmanager.GetInstanceInfoRequest
 */
export type GetInstanceInfoRequest = Message<"sapphillon.v1.tabmanager.GetInstanceInfoRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetInstanceInfoRequest.
 * Use `create(GetInstanceInfoRequestSchema)` to create a new message.
 */
export const GetInstanceInfoRequestSchema: GenMessage<GetInstanceInfoRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 7);

/**
 * Response containing aggregated instance information
 *
 * @generated from message sapphillon.v1.tabmanager.GetInstanceInfoResponse
 */
export type GetInstanceInfoResponse = Message<"sapphillon.v1.tabmanager.GetInstanceInfoResponse"> & {
  /**
   * JSON string containing URI, title, favicon, HTML, screenshot
   *
   * @generated from field: optional string instance_info = 1;
   */
  instanceInfo?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetInstanceInfoResponse.
 * Use `create(GetInstanceInfoResponseSchema)` to create a new message.
 */
export const GetInstanceInfoResponseSchema: GenMessage<GetInstanceInfoResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 8);

/**
 * Request to close tab
 *
 * @generated from message sapphillon.v1.tabmanager.DestroyInstanceRequest
 */
export type DestroyInstanceRequest = Message<"sapphillon.v1.tabmanager.DestroyInstanceRequest"> & {
  /**
   * Instance ID to destroy
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.DestroyInstanceRequest.
 * Use `create(DestroyInstanceRequestSchema)` to create a new message.
 */
export const DestroyInstanceRequestSchema: GenMessage<DestroyInstanceRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 9);

/**
 * Response for destroy operation
 *
 * @generated from message sapphillon.v1.tabmanager.DestroyInstanceResponse
 */
export type DestroyInstanceResponse = Message<"sapphillon.v1.tabmanager.DestroyInstanceResponse"> & {
  /**
   * Success status
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.DestroyInstanceResponse.
 * Use `create(DestroyInstanceResponseSchema)` to create a new message.
 */
export const DestroyInstanceResponseSchema: GenMessage<DestroyInstanceResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 10);

/**
 * Request to navigate tab
 *
 * @generated from message sapphillon.v1.tabmanager.NavigateRequest
 */
export type NavigateRequest = Message<"sapphillon.v1.tabmanager.NavigateRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Target URL
   *
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.NavigateRequest.
 * Use `create(NavigateRequestSchema)` to create a new message.
 */
export const NavigateRequestSchema: GenMessage<NavigateRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 11);

/**
 * Response for navigation
 *
 * @generated from message sapphillon.v1.tabmanager.NavigateResponse
 */
export type NavigateResponse = Message<"sapphillon.v1.tabmanager.NavigateResponse"> & {
  /**
   * Success status
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Error message if navigation failed
   *
   * @generated from field: optional string error_message = 2;
   */
  errorMessage?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.NavigateResponse.
 * Use `create(NavigateResponseSchema)` to create a new message.
 */
export const NavigateResponseSchema: GenMessage<NavigateResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 12);

/**
 * Request to get current URI
 *
 * @generated from message sapphillon.v1.tabmanager.GetURIRequest
 */
export type GetURIRequest = Message<"sapphillon.v1.tabmanager.GetURIRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetURIRequest.
 * Use `create(GetURIRequestSchema)` to create a new message.
 */
export const GetURIRequestSchema: GenMessage<GetURIRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 13);

/**
 * Response containing current URI
 *
 * @generated from message sapphillon.v1.tabmanager.GetURIResponse
 */
export type GetURIResponse = Message<"sapphillon.v1.tabmanager.GetURIResponse"> & {
  /**
   * Current URI of the tab
   *
   * @generated from field: string uri = 1;
   */
  uri: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetURIResponse.
 * Use `create(GetURIResponseSchema)` to create a new message.
 */
export const GetURIResponseSchema: GenMessage<GetURIResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 14);

/**
 * Request to get HTML content
 *
 * @generated from message sapphillon.v1.tabmanager.GetHTMLRequest
 */
export type GetHTMLRequest = Message<"sapphillon.v1.tabmanager.GetHTMLRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetHTMLRequest.
 * Use `create(GetHTMLRequestSchema)` to create a new message.
 */
export const GetHTMLRequestSchema: GenMessage<GetHTMLRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 15);

/**
 * Response containing HTML
 *
 * @generated from message sapphillon.v1.tabmanager.GetHTMLResponse
 */
export type GetHTMLResponse = Message<"sapphillon.v1.tabmanager.GetHTMLResponse"> & {
  /**
   * Full document HTML
   *
   * @generated from field: optional string html = 1;
   */
  html?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetHTMLResponse.
 * Use `create(GetHTMLResponseSchema)` to create a new message.
 */
export const GetHTMLResponseSchema: GenMessage<GetHTMLResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 16);

/**
 * Request to get element by selector
 *
 * @generated from message sapphillon.v1.tabmanager.GetElementRequest
 */
export type GetElementRequest = Message<"sapphillon.v1.tabmanager.GetElementRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetElementRequest.
 * Use `create(GetElementRequestSchema)` to create a new message.
 */
export const GetElementRequestSchema: GenMessage<GetElementRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 17);

/**
 * Response containing element HTML
 *
 * @generated from message sapphillon.v1.tabmanager.GetElementResponse
 */
export type GetElementResponse = Message<"sapphillon.v1.tabmanager.GetElementResponse"> & {
  /**
   * Element's outerHTML
   *
   * @generated from field: optional string element_html = 1;
   */
  elementHtml?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetElementResponse.
 * Use `create(GetElementResponseSchema)` to create a new message.
 */
export const GetElementResponseSchema: GenMessage<GetElementResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 18);

/**
 * Request to get element text
 *
 * @generated from message sapphillon.v1.tabmanager.GetElementTextRequest
 */
export type GetElementTextRequest = Message<"sapphillon.v1.tabmanager.GetElementTextRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetElementTextRequest.
 * Use `create(GetElementTextRequestSchema)` to create a new message.
 */
export const GetElementTextRequestSchema: GenMessage<GetElementTextRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 19);

/**
 * Response containing element text
 *
 * @generated from message sapphillon.v1.tabmanager.GetElementTextResponse
 */
export type GetElementTextResponse = Message<"sapphillon.v1.tabmanager.GetElementTextResponse"> & {
  /**
   * Element's textContent
   *
   * @generated from field: optional string text = 1;
   */
  text?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetElementTextResponse.
 * Use `create(GetElementTextResponseSchema)` to create a new message.
 */
export const GetElementTextResponseSchema: GenMessage<GetElementTextResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 20);

/**
 * Request to get input value
 *
 * @generated from message sapphillon.v1.tabmanager.GetValueRequest
 */
export type GetValueRequest = Message<"sapphillon.v1.tabmanager.GetValueRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetValueRequest.
 * Use `create(GetValueRequestSchema)` to create a new message.
 */
export const GetValueRequestSchema: GenMessage<GetValueRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 21);

/**
 * Response containing input value
 *
 * @generated from message sapphillon.v1.tabmanager.GetValueResponse
 */
export type GetValueResponse = Message<"sapphillon.v1.tabmanager.GetValueResponse"> & {
  /**
   * Input/textarea value
   *
   * @generated from field: optional string value = 1;
   */
  value?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.GetValueResponse.
 * Use `create(GetValueResponseSchema)` to create a new message.
 */
export const GetValueResponseSchema: GenMessage<GetValueResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 22);

/**
 * Request to click element
 *
 * @generated from message sapphillon.v1.tabmanager.ClickElementRequest
 */
export type ClickElementRequest = Message<"sapphillon.v1.tabmanager.ClickElementRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.ClickElementRequest.
 * Use `create(ClickElementRequestSchema)` to create a new message.
 */
export const ClickElementRequestSchema: GenMessage<ClickElementRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 23);

/**
 * Response for click operation
 *
 * @generated from message sapphillon.v1.tabmanager.ClickElementResponse
 */
export type ClickElementResponse = Message<"sapphillon.v1.tabmanager.ClickElementResponse"> & {
  /**
   * Whether click was successful
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.ClickElementResponse.
 * Use `create(ClickElementResponseSchema)` to create a new message.
 */
export const ClickElementResponseSchema: GenMessage<ClickElementResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 24);

/**
 * Request to wait for element
 *
 * @generated from message sapphillon.v1.tabmanager.WaitForElementRequest
 */
export type WaitForElementRequest = Message<"sapphillon.v1.tabmanager.WaitForElementRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;

  /**
   * Timeout in milliseconds (optional)
   *
   * @generated from field: optional int32 timeout = 3;
   */
  timeout?: number;
};

/**
 * Describes the message sapphillon.v1.tabmanager.WaitForElementRequest.
 * Use `create(WaitForElementRequestSchema)` to create a new message.
 */
export const WaitForElementRequestSchema: GenMessage<WaitForElementRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 25);

/**
 * Response for wait operation
 *
 * @generated from message sapphillon.v1.tabmanager.WaitForElementResponse
 */
export type WaitForElementResponse = Message<"sapphillon.v1.tabmanager.WaitForElementResponse"> & {
  /**
   * Whether element appeared within timeout
   *
   * @generated from field: bool found = 1;
   */
  found: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.WaitForElementResponse.
 * Use `create(WaitForElementResponseSchema)` to create a new message.
 */
export const WaitForElementResponseSchema: GenMessage<WaitForElementResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 26);

/**
 * Request to execute JavaScript
 *
 * @generated from message sapphillon.v1.tabmanager.ExecuteScriptRequest
 */
export type ExecuteScriptRequest = Message<"sapphillon.v1.tabmanager.ExecuteScriptRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * JavaScript code to execute
   *
   * @generated from field: string script = 2;
   */
  script: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.ExecuteScriptRequest.
 * Use `create(ExecuteScriptRequestSchema)` to create a new message.
 */
export const ExecuteScriptRequestSchema: GenMessage<ExecuteScriptRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 27);

/**
 * Response for script execution
 *
 * @generated from message sapphillon.v1.tabmanager.ExecuteScriptResponse
 */
export type ExecuteScriptResponse = Message<"sapphillon.v1.tabmanager.ExecuteScriptResponse"> & {
  /**
   * Success status
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Error message if execution failed
   *
   * @generated from field: optional string error_message = 2;
   */
  errorMessage?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.ExecuteScriptResponse.
 * Use `create(ExecuteScriptResponseSchema)` to create a new message.
 */
export const ExecuteScriptResponseSchema: GenMessage<ExecuteScriptResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 28);

/**
 * Screenshot rectangle specification
 *
 * @generated from message sapphillon.v1.tabmanager.ScreenshotRect
 */
export type ScreenshotRect = Message<"sapphillon.v1.tabmanager.ScreenshotRect"> & {
  /**
   * X coordinate
   *
   * @generated from field: optional int32 x = 1;
   */
  x?: number;

  /**
   * Y coordinate
   *
   * @generated from field: optional int32 y = 2;
   */
  y?: number;

  /**
   * Width
   *
   * @generated from field: optional int32 width = 3;
   */
  width?: number;

  /**
   * Height
   *
   * @generated from field: optional int32 height = 4;
   */
  height?: number;
};

/**
 * Describes the message sapphillon.v1.tabmanager.ScreenshotRect.
 * Use `create(ScreenshotRectSchema)` to create a new message.
 */
export const ScreenshotRectSchema: GenMessage<ScreenshotRect> = /*@__PURE__*/
  messageDesc(file_tab_manager, 29);

/**
 * Request to take screenshot
 *
 * @generated from message sapphillon.v1.tabmanager.TakeScreenshotRequest
 */
export type TakeScreenshotRequest = Message<"sapphillon.v1.tabmanager.TakeScreenshotRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Screenshot type
   *
   * @generated from field: sapphillon.v1.tabmanager.ScreenshotType type = 2;
   */
  type: ScreenshotType;

  /**
   * CSS selector for element screenshots
   *
   * @generated from field: optional string selector = 3;
   */
  selector?: string;

  /**
   * Rectangle for region screenshots
   *
   * @generated from field: optional sapphillon.v1.tabmanager.ScreenshotRect rect = 4;
   */
  rect?: ScreenshotRect;
};

/**
 * Describes the message sapphillon.v1.tabmanager.TakeScreenshotRequest.
 * Use `create(TakeScreenshotRequestSchema)` to create a new message.
 */
export const TakeScreenshotRequestSchema: GenMessage<TakeScreenshotRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 30);

/**
 * Response containing screenshot
 *
 * @generated from message sapphillon.v1.tabmanager.TakeScreenshotResponse
 */
export type TakeScreenshotResponse = Message<"sapphillon.v1.tabmanager.TakeScreenshotResponse"> & {
  /**
   * PNG dataURL screenshot
   *
   * @generated from field: optional string screenshot_data = 1;
   */
  screenshotData?: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.TakeScreenshotResponse.
 * Use `create(TakeScreenshotResponseSchema)` to create a new message.
 */
export const TakeScreenshotResponseSchema: GenMessage<TakeScreenshotResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 31);

/**
 * Request to fill form
 *
 * @generated from message sapphillon.v1.tabmanager.FillFormRequest
 */
export type FillFormRequest = Message<"sapphillon.v1.tabmanager.FillFormRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Map of selector to value
   *
   * @generated from field: map<string, string> form_data = 2;
   */
  formData: { [key: string]: string };
};

/**
 * Describes the message sapphillon.v1.tabmanager.FillFormRequest.
 * Use `create(FillFormRequestSchema)` to create a new message.
 */
export const FillFormRequestSchema: GenMessage<FillFormRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 32);

/**
 * Response for fill form operation
 *
 * @generated from message sapphillon.v1.tabmanager.FillFormResponse
 */
export type FillFormResponse = Message<"sapphillon.v1.tabmanager.FillFormResponse"> & {
  /**
   * Whether form filling was successful
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.FillFormResponse.
 * Use `create(FillFormResponseSchema)` to create a new message.
 */
export const FillFormResponseSchema: GenMessage<FillFormResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 33);

/**
 * Request to submit form
 *
 * @generated from message sapphillon.v1.tabmanager.SubmitFormRequest
 */
export type SubmitFormRequest = Message<"sapphillon.v1.tabmanager.SubmitFormRequest"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * CSS selector
   *
   * @generated from field: string selector = 2;
   */
  selector: string;
};

/**
 * Describes the message sapphillon.v1.tabmanager.SubmitFormRequest.
 * Use `create(SubmitFormRequestSchema)` to create a new message.
 */
export const SubmitFormRequestSchema: GenMessage<SubmitFormRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 34);

/**
 * Response for form submission
 *
 * @generated from message sapphillon.v1.tabmanager.SubmitFormResponse
 */
export type SubmitFormResponse = Message<"sapphillon.v1.tabmanager.SubmitFormResponse"> & {
  /**
   * Whether submission was successful
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.SubmitFormResponse.
 * Use `create(SubmitFormResponseSchema)` to create a new message.
 */
export const SubmitFormResponseSchema: GenMessage<SubmitFormResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 35);

/**
 * Request to wait/sleep
 *
 * @generated from message sapphillon.v1.tabmanager.WaitRequest
 */
export type WaitRequest = Message<"sapphillon.v1.tabmanager.WaitRequest"> & {
  /**
   * Milliseconds to wait
   *
   * @generated from field: int32 milliseconds = 1;
   */
  milliseconds: number;
};

/**
 * Describes the message sapphillon.v1.tabmanager.WaitRequest.
 * Use `create(WaitRequestSchema)` to create a new message.
 */
export const WaitRequestSchema: GenMessage<WaitRequest> = /*@__PURE__*/
  messageDesc(file_tab_manager, 36);

/**
 * Response for wait operation
 *
 * @generated from message sapphillon.v1.tabmanager.WaitResponse
 */
export type WaitResponse = Message<"sapphillon.v1.tabmanager.WaitResponse"> & {
  /**
   * Success status
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message sapphillon.v1.tabmanager.WaitResponse.
 * Use `create(WaitResponseSchema)` to create a new message.
 */
export const WaitResponseSchema: GenMessage<WaitResponse> = /*@__PURE__*/
  messageDesc(file_tab_manager, 37);

/**
 * Detailed tab information
 *
 * @generated from message sapphillon.v1.tabmanager.DetailedTabInfo
 */
export type DetailedTabInfo = Message<"sapphillon.v1.tabmanager.DetailedTabInfo"> & {
  /**
   * Instance ID
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Browser-assigned tab ID
   *
   * @generated from field: string browser_id = 2;
   */
  browserId: string;

  /**
   * Current URI
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * Page title
   *
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * Favicon URL
   *
   * @generated from field: optional string favicon_url = 5;
   */
  faviconUrl?: string;

  /**
   * Whether tab is active
   *
   * @generated from field: bool is_active = 6;
   */
  isActive: boolean;

  /**
   * Creation timestamp
   *
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * Last update timestamp
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message sapphillon.v1.tabmanager.DetailedTabInfo.
 * Use `create(DetailedTabInfoSchema)` to create a new message.
 */
export const DetailedTabInfoSchema: GenMessage<DetailedTabInfo> = /*@__PURE__*/
  messageDesc(file_tab_manager, 38);

/**
 * Screenshot type enumeration
 *
 * @generated from enum sapphillon.v1.tabmanager.ScreenshotType
 */
export enum ScreenshotType {
  /**
   * @generated from enum value: SCREENSHOT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCREENSHOT_TYPE_VIEWPORT = 1;
   */
  VIEWPORT = 1,

  /**
   * @generated from enum value: SCREENSHOT_TYPE_ELEMENT = 2;
   */
  ELEMENT = 2,

  /**
   * @generated from enum value: SCREENSHOT_TYPE_FULL_PAGE = 3;
   */
  FULL_PAGE = 3,

  /**
   * @generated from enum value: SCREENSHOT_TYPE_REGION = 4;
   */
  REGION = 4,
}

/**
 * Describes the enum sapphillon.v1.tabmanager.ScreenshotType.
 */
export const ScreenshotTypeSchema: GenEnum<ScreenshotType> = /*@__PURE__*/
  enumDesc(file_tab_manager, 0);

/**
 * Tab Manager Service (Visible tab operations)
 *
 * @generated from service sapphillon.v1.tabmanager.TabManagerService
 */
export const TabManagerService: GenService<{
  /**
   * Create a new visible tab
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof CreateInstanceResponseSchema;
  },
  /**
   * Attach to existing visible tab
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.AttachToTab
   */
  attachToTab: {
    methodKind: "unary";
    input: typeof AttachToTabRequestSchema;
    output: typeof AttachToTabResponseSchema;
  },
  /**
   * List all visible tabs
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ListTabs
   */
  listTabs: {
    methodKind: "unary";
    input: typeof ListTabsRequestSchema;
    output: typeof ListTabsResponseSchema;
  },
  /**
   * Get aggregated instance information
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetInstanceInfo
   */
  getInstanceInfo: {
    methodKind: "unary";
    input: typeof GetInstanceInfoRequestSchema;
    output: typeof GetInstanceInfoResponseSchema;
  },
  /**
   * Close tab
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.DestroyInstance
   */
  destroyInstance: {
    methodKind: "unary";
    input: typeof DestroyInstanceRequestSchema;
    output: typeof DestroyInstanceResponseSchema;
  },
  /**
   * Navigate tab
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.Navigate
   */
  navigate: {
    methodKind: "unary";
    input: typeof NavigateRequestSchema;
    output: typeof NavigateResponseSchema;
  },
  /**
   * Get current URI
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetURI
   */
  getURI: {
    methodKind: "unary";
    input: typeof GetURIRequestSchema;
    output: typeof GetURIResponseSchema;
  },
  /**
   * Get document HTML
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetHTML
   */
  getHTML: {
    methodKind: "unary";
    input: typeof GetHTMLRequestSchema;
    output: typeof GetHTMLResponseSchema;
  },
  /**
   * Get element by selector
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetElement
   */
  getElement: {
    methodKind: "unary";
    input: typeof GetElementRequestSchema;
    output: typeof GetElementResponseSchema;
  },
  /**
   * Get element text content
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetElementText
   */
  getElementText: {
    methodKind: "unary";
    input: typeof GetElementTextRequestSchema;
    output: typeof GetElementTextResponseSchema;
  },
  /**
   * Get input/textarea value
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetValue
   */
  getValue: {
    methodKind: "unary";
    input: typeof GetValueRequestSchema;
    output: typeof GetValueResponseSchema;
  },
  /**
   * Click element
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ClickElement
   */
  clickElement: {
    methodKind: "unary";
    input: typeof ClickElementRequestSchema;
    output: typeof ClickElementResponseSchema;
  },
  /**
   * Wait for element to appear
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.WaitForElement
   */
  waitForElement: {
    methodKind: "unary";
    input: typeof WaitForElementRequestSchema;
    output: typeof WaitForElementResponseSchema;
  },
  /**
   * Execute JavaScript
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ExecuteScript
   */
  executeScript: {
    methodKind: "unary";
    input: typeof ExecuteScriptRequestSchema;
    output: typeof ExecuteScriptResponseSchema;
  },
  /**
   * Take screenshot
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.TakeScreenshot
   */
  takeScreenshot: {
    methodKind: "unary";
    input: typeof TakeScreenshotRequestSchema;
    output: typeof TakeScreenshotResponseSchema;
  },
  /**
   * Fill form fields
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.FillForm
   */
  fillForm: {
    methodKind: "unary";
    input: typeof FillFormRequestSchema;
    output: typeof FillFormResponseSchema;
  },
  /**
   * Submit form
   *
   * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.SubmitForm
   */
  submitForm: {
    methodKind: "unary";
    input: typeof SubmitFormRequestSchema;
    output: typeof SubmitFormResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_tab_manager, 0);

