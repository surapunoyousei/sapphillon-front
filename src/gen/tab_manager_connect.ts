// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file tab_manager.proto (package sapphillon.v1.tabmanager, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AttachToTabRequest, AttachToTabResponse, ClickElementRequest, ClickElementResponse, CreateInstanceRequest, CreateInstanceResponse, DestroyInstanceRequest, DestroyInstanceResponse, ExecuteScriptRequest, ExecuteScriptResponse, FillFormRequest, FillFormResponse, GetElementRequest, GetElementResponse, GetElementTextRequest, GetElementTextResponse, GetHTMLRequest, GetHTMLResponse, GetInstanceInfoRequest, GetInstanceInfoResponse, GetURIRequest, GetURIResponse, GetValueRequest, GetValueResponse, ListTabsRequest, ListTabsResponse, NavigateRequest, NavigateResponse, SubmitFormRequest, SubmitFormResponse, TakeScreenshotRequest, TakeScreenshotResponse, WaitForElementRequest, WaitForElementResponse } from "./tab_manager_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Tab Manager Service (Visible tab operations)
 *
 * @generated from service sapphillon.v1.tabmanager.TabManagerService
 */
export const TabManagerService = {
  typeName: "sapphillon.v1.tabmanager.TabManagerService",
  methods: {
    /**
     * Create a new visible tab
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.CreateInstance
     */
    createInstance: {
      name: "CreateInstance",
      I: CreateInstanceRequest,
      O: CreateInstanceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Attach to existing visible tab
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.AttachToTab
     */
    attachToTab: {
      name: "AttachToTab",
      I: AttachToTabRequest,
      O: AttachToTabResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all visible tabs
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ListTabs
     */
    listTabs: {
      name: "ListTabs",
      I: ListTabsRequest,
      O: ListTabsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get aggregated instance information
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetInstanceInfo
     */
    getInstanceInfo: {
      name: "GetInstanceInfo",
      I: GetInstanceInfoRequest,
      O: GetInstanceInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Close tab
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.DestroyInstance
     */
    destroyInstance: {
      name: "DestroyInstance",
      I: DestroyInstanceRequest,
      O: DestroyInstanceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Navigate tab
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.Navigate
     */
    navigate: {
      name: "Navigate",
      I: NavigateRequest,
      O: NavigateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get current URI
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetURI
     */
    getURI: {
      name: "GetURI",
      I: GetURIRequest,
      O: GetURIResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get document HTML
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetHTML
     */
    getHTML: {
      name: "GetHTML",
      I: GetHTMLRequest,
      O: GetHTMLResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get element by selector
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetElement
     */
    getElement: {
      name: "GetElement",
      I: GetElementRequest,
      O: GetElementResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get element text content
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetElementText
     */
    getElementText: {
      name: "GetElementText",
      I: GetElementTextRequest,
      O: GetElementTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get input/textarea value
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.GetValue
     */
    getValue: {
      name: "GetValue",
      I: GetValueRequest,
      O: GetValueResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Click element
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ClickElement
     */
    clickElement: {
      name: "ClickElement",
      I: ClickElementRequest,
      O: ClickElementResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Wait for element to appear
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.WaitForElement
     */
    waitForElement: {
      name: "WaitForElement",
      I: WaitForElementRequest,
      O: WaitForElementResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute JavaScript
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.ExecuteScript
     */
    executeScript: {
      name: "ExecuteScript",
      I: ExecuteScriptRequest,
      O: ExecuteScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Take screenshot
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.TakeScreenshot
     */
    takeScreenshot: {
      name: "TakeScreenshot",
      I: TakeScreenshotRequest,
      O: TakeScreenshotResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Fill form fields
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.FillForm
     */
    fillForm: {
      name: "FillForm",
      I: FillFormRequest,
      O: FillFormResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Submit form
     *
     * @generated from rpc sapphillon.v1.tabmanager.TabManagerService.SubmitForm
     */
    submitForm: {
      name: "SubmitForm",
      I: SubmitFormRequest,
      O: SubmitFormResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

