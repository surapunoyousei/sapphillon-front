// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file browser_bridge.proto (package sapphillon.v1.browserBridge, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file browser_bridge.proto.
 */
export const file_browser_bridge: GenFile = /*@__PURE__*/
  fileDesc("ChRicm93c2VyX2JyaWRnZS5wcm90bxIbc2FwcGhpbGxvbi52MS5icm93c2VyQnJpZGdlIhoKGFN1YnNjcmliZVJlcXVlc3RzUmVxdWVzdCJYCg1CcmlkZ2VSZXF1ZXN0EgoKAmlkGAEgASgJEg4KBm1ldGhvZBgCIAEoCRIRCglhcmdzX2pzb24YAyABKAkSGAoQZGVhZGxpbmVfdW5peF9tcxgEIAEoAyKGAQoPQ29tcGxldGVSZXF1ZXN0EgoKAmlkGAEgASgJEg8KB3N1Y2Nlc3MYAiABKAgSGAoLcmVzdWx0X2pzb24YAyABKAlIAIgBARIaCg1lcnJvcl9tZXNzYWdlGAQgASgJSAGIAQFCDgoMX3Jlc3VsdF9qc29uQhAKDl9lcnJvcl9tZXNzYWdlIkYKEENvbXBsZXRlUmVzcG9uc2USEAoIYWNjZXB0ZWQYASABKAgSFAoHbWVzc2FnZRgCIAEoCUgAiAEBQgoKCF9tZXNzYWdlMucCCg1Ccm93c2VyQnJpZGdlEngKEVN1YnNjcmliZVJlcXVlc3RzEjUuc2FwcGhpbGxvbi52MS5icm93c2VyQnJpZGdlLlN1YnNjcmliZVJlcXVlc3RzUmVxdWVzdBoqLnNhcHBoaWxsb24udjEuYnJvd3NlckJyaWRnZS5CcmlkZ2VSZXF1ZXN0MAESZwoIQ29tcGxldGUSLC5zYXBwaGlsbG9uLnYxLmJyb3dzZXJCcmlkZ2UuQ29tcGxldGVSZXF1ZXN0Gi0uc2FwcGhpbGxvbi52MS5icm93c2VyQnJpZGdlLkNvbXBsZXRlUmVzcG9uc2UScwoOV2FpdEZvclJlcXVlc3QSNS5zYXBwaGlsbG9uLnYxLmJyb3dzZXJCcmlkZ2UuU3Vic2NyaWJlUmVxdWVzdHNSZXF1ZXN0Giouc2FwcGhpbGxvbi52MS5icm93c2VyQnJpZGdlLkJyaWRnZVJlcXVlc3RiBnByb3RvMw");

/**
 * @generated from message sapphillon.v1.browserBridge.SubscribeRequestsRequest
 */
export type SubscribeRequestsRequest = Message<"sapphillon.v1.browserBridge.SubscribeRequestsRequest"> & {
};

/**
 * Describes the message sapphillon.v1.browserBridge.SubscribeRequestsRequest.
 * Use `create(SubscribeRequestsRequestSchema)` to create a new message.
 */
export const SubscribeRequestsRequestSchema: GenMessage<SubscribeRequestsRequest> = /*@__PURE__*/
  messageDesc(file_browser_bridge, 0);

/**
 * @generated from message sapphillon.v1.browserBridge.BridgeRequest
 */
export type BridgeRequest = Message<"sapphillon.v1.browserBridge.BridgeRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string method = 2;
   */
  method: string;

  /**
   * @generated from field: string args_json = 3;
   */
  argsJson: string;

  /**
   * @generated from field: int64 deadline_unix_ms = 4;
   */
  deadlineUnixMs: bigint;
};

/**
 * Describes the message sapphillon.v1.browserBridge.BridgeRequest.
 * Use `create(BridgeRequestSchema)` to create a new message.
 */
export const BridgeRequestSchema: GenMessage<BridgeRequest> = /*@__PURE__*/
  messageDesc(file_browser_bridge, 1);

/**
 * @generated from message sapphillon.v1.browserBridge.CompleteRequest
 */
export type CompleteRequest = Message<"sapphillon.v1.browserBridge.CompleteRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: optional string result_json = 3;
   */
  resultJson?: string;

  /**
   * @generated from field: optional string error_message = 4;
   */
  errorMessage?: string;
};

/**
 * Describes the message sapphillon.v1.browserBridge.CompleteRequest.
 * Use `create(CompleteRequestSchema)` to create a new message.
 */
export const CompleteRequestSchema: GenMessage<CompleteRequest> = /*@__PURE__*/
  messageDesc(file_browser_bridge, 2);

/**
 * @generated from message sapphillon.v1.browserBridge.CompleteResponse
 */
export type CompleteResponse = Message<"sapphillon.v1.browserBridge.CompleteResponse"> & {
  /**
   * @generated from field: bool accepted = 1;
   */
  accepted: boolean;

  /**
   * @generated from field: optional string message = 2;
   */
  message?: string;
};

/**
 * Describes the message sapphillon.v1.browserBridge.CompleteResponse.
 * Use `create(CompleteResponseSchema)` to create a new message.
 */
export const CompleteResponseSchema: GenMessage<CompleteResponse> = /*@__PURE__*/
  messageDesc(file_browser_bridge, 3);

/**
 * @generated from service sapphillon.v1.browserBridge.BrowserBridge
 */
export const BrowserBridge: GenService<{
  /**
   * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.SubscribeRequests
   */
  subscribeRequests: {
    methodKind: "server_streaming";
    input: typeof SubscribeRequestsRequestSchema;
    output: typeof BridgeRequestSchema;
  },
  /**
   * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.Complete
   */
  complete: {
    methodKind: "unary";
    input: typeof CompleteRequestSchema;
    output: typeof CompleteResponseSchema;
  },
  /**
   * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.WaitForRequest
   */
  waitForRequest: {
    methodKind: "unary";
    input: typeof SubscribeRequestsRequestSchema;
    output: typeof BridgeRequestSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_browser_bridge, 0);

