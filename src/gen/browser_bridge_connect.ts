// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file browser_bridge.proto (package sapphillon.v1.browserBridge, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BridgeRequest, CompleteRequest, CompleteResponse, SubscribeRequestsRequest } from "./browser_bridge_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service sapphillon.v1.browserBridge.BrowserBridge
 */
export const BrowserBridge = {
  typeName: "sapphillon.v1.browserBridge.BrowserBridge",
  methods: {
    /**
     * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.SubscribeRequests
     */
    subscribeRequests: {
      name: "SubscribeRequests",
      I: SubscribeRequestsRequest,
      O: BridgeRequest,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.Complete
     */
    complete: {
      name: "Complete",
      I: CompleteRequest,
      O: CompleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sapphillon.v1.browserBridge.BrowserBridge.WaitForRequest
     */
    waitForRequest: {
      name: "WaitForRequest",
      I: SubscribeRequestsRequest,
      O: BridgeRequest,
      kind: MethodKind.Unary,
    },
  }
} as const;

