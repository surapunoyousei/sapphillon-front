// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file sapphillon/v1/plugin.proto (package sapphillon.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Permission } from "./permission_pb";
import { file_sapphillon_v1_permission } from "./permission_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sapphillon/v1/plugin.proto.
 */
export const file_sapphillon_v1_plugin: GenFile = /*@__PURE__*/
  fileDesc("ChpzYXBwaGlsbG9uL3YxL3BsdWdpbi5wcm90bxINc2FwcGhpbGxvbi52MSKBAQoOUGx1Z2luRnVuY3Rpb24SEwoLZnVuY3Rpb25faWQYASABKAkSFQoNZnVuY3Rpb25fbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIuCgtwZXJtaXNzaW9ucxgEIAMoCzIZLnNhcHBoaWxsb24udjEuUGVybWlzc2lvbiKTAwoNUGx1Z2luUGFja2FnZRISCgpwYWNrYWdlX2lkGAEgASgJEhQKDHBhY2thZ2VfbmFtZRgCIAEoCRIXCg9wYWNrYWdlX3ZlcnNpb24YAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSMAoJZnVuY3Rpb25zGAUgAygLMh0uc2FwcGhpbGxvbi52MS5QbHVnaW5GdW5jdGlvbhIYChBwbHVnaW5fc3RvcmVfdXJsGAYgASgJEhwKD2ludGVybmFsX3BsdWdpbhgHIAEoCEgAiAEBEhUKCHZlcmlmaWVkGAggASgISAGIAQESFwoKZGVwcmVjYXRlZBgJIAEoCEgCiAEBEjAKDGluc3RhbGxlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCEgoQX2ludGVybmFsX3BsdWdpbkILCglfdmVyaWZpZWRCDQoLX2RlcHJlY2F0ZWRiBnByb3RvMw", [file_google_protobuf_timestamp, file_sapphillon_v1_permission]);

/**
 * Describes a callable function exposed by a plugin.
 * A function declares its purpose, identity, and required permissions for execution.
 * 
 * Fields:
 * - function_id: Stable unique identifier used by systems to reference the function.
 * - function_name: Human-friendly name suitable for UIs.
 * - description: Summary of what the function does and typical use cases.
 * - permissions: Permissions required for the caller to execute this function.
 * 
 * Example:
 *   PluginFunction {
 *     function_id: "send_notification"
 *     function_name: "Send Notification"
 *     description: "Sends a message to a configured channel"
 *     permissions: [{ permission_type: PERMISSION_TYPE_EXECUTE, resource: ["channels/general"] }]
 *   }
 *
 * @generated from message sapphillon.v1.PluginFunction
 */
export type PluginFunction = Message<"sapphillon.v1.PluginFunction"> & {
  /**
   * Stable unique identifier for the function.
   * Behavior: Required. Must be unique within the plugin package.
   *
   * @generated from field: string function_id = 1;
   */
  functionId: string;

  /**
   * Human-friendly display name of the function.
   * Example: "Send Notification".
   *
   * @generated from field: string function_name = 2;
   */
  functionName: string;

  /**
   * Short description of what the function does and when to use it.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Permissions required to execute this function successfully.
   * Use Permission.resource to scope to specific entities as needed.
   *
   * @generated from field: repeated sapphillon.v1.Permission permissions = 4;
   */
  permissions: Permission[];
};

/**
 * Describes the message sapphillon.v1.PluginFunction.
 * Use `create(PluginFunctionSchema)` to create a new message.
 */
export const PluginFunctionSchema: GenMessage<PluginFunction> = /*@__PURE__*/
  messageDesc(file_sapphillon_v1_plugin, 0);

/**
 * Represents a plugin package that can be installed into the platform.
 * A plugin groups one or more functions and includes metadata useful for discovery and governance.
 * 
 * Fields:
 * - package_id: Stable unique identifier of the plugin package.
 * - package_name: Human-friendly name of the plugin.
 * - package_version: Semantic version string (e.g., "1.2.3").
 * - description: Summary of the plugin's purpose and capabilities.
 * - functions: Functions exposed by this plugin.
 * - plugin_store_url: URL to the plugin page or documentation.
 * - internal_plugin: Indicates whether the plugin is internal-only.
 * - verified: Indicates whether the plugin is verified by the platform.
 * 
 * - deprecated: Indicates whether the plugin is deprecated and should not be used for new workflows.
 * - installed_at: Time when the plugin was installed.
 * - updated_at: Time when the plugin was last updated.
 * 
 * Example:
 *   PluginPackage {
 *     package_id: "com.example.notifications"
 *     package_name: "Notifications"
 *     package_version: "1.4.0"
 *     description: "Provides functions for sending notifications"
 *     plugin_store_url: "https://plugins.example.com/com.example.notifications"
 *     verified: true
 *     functions: [{ function_id: "send_notification", ... }]
 *   }
 *
 * @generated from message sapphillon.v1.PluginPackage
 */
export type PluginPackage = Message<"sapphillon.v1.PluginPackage"> & {
  /**
   * Stable unique identifier for the plugin package.
   * Behavior: Required; unique across all installed plugins.
   *
   * @generated from field: string package_id = 1;
   */
  packageId: string;

  /**
   * Human-friendly name of the plugin package.
   * Example: "Notifications".
   *
   * @generated from field: string package_name = 2;
   */
  packageName: string;

  /**
   * Semantic version of the plugin package.
   * Format: "MAJOR.MINOR.PATCH" (e.g., "1.0.3").
   *
   * @generated from field: string package_version = 3;
   */
  packageVersion: string;

  /**
   * Description of the plugin's purpose and capabilities.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Functions exposed by this plugin.
   *
   * @generated from field: repeated sapphillon.v1.PluginFunction functions = 5;
   */
  functions: PluginFunction[];

  /**
   * URL to the plugin's store page or documentation.
   * Example: "https://plugins.example.com/com.example.notifications".
   *
   * @generated from field: string plugin_store_url = 6;
   */
  pluginStoreUrl: string;

  /**
   * Whether this plugin is intended for internal use only.
   * Behavior: Optional. Defaults to false when unset.
   *
   * @generated from field: optional bool internal_plugin = 7;
   */
  internalPlugin?: boolean;

  /**
   * Whether this plugin has been verified by the platform or publisher.
   * Behavior: Optional. Defaults to false when unset.
   *
   * @generated from field: optional bool verified = 8;
   */
  verified?: boolean;

  /**
   * Whether this plugin is deprecated. New usage should be avoided.
   * Behavior: Optional. When true, UIs should display warnings.
   *
   * @generated from field: optional bool deprecated = 9;
   */
  deprecated?: boolean;

  /**
   * Time when the plugin was installed.
   *
   * @generated from field: google.protobuf.Timestamp installed_at = 10;
   */
  installedAt?: Timestamp;

  /**
   * Time when the plugin metadata or package was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message sapphillon.v1.PluginPackage.
 * Use `create(PluginPackageSchema)` to create a new message.
 */
export const PluginPackageSchema: GenMessage<PluginPackage> = /*@__PURE__*/
  messageDesc(file_sapphillon_v1_plugin, 1);

