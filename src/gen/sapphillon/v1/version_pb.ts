// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file sapphillon/v1/version.proto (package sapphillon.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sapphillon/v1/version.proto.
 */
export const file_sapphillon_v1_version: GenFile = /*@__PURE__*/
  fileDesc("ChtzYXBwaGlsbG9uL3YxL3ZlcnNpb24ucHJvdG8SDXNhcHBoaWxsb24udjEiGgoHVmVyc2lvbhIPCgd2ZXJzaW9uGAEgASgJIhMKEUdldFZlcnNpb25SZXF1ZXN0Ij0KEkdldFZlcnNpb25SZXNwb25zZRInCgd2ZXJzaW9uGAEgASgLMhYuc2FwcGhpbGxvbi52MS5WZXJzaW9uMmMKDlZlcnNpb25TZXJ2aWNlElEKCkdldFZlcnNpb24SIC5zYXBwaGlsbG9uLnYxLkdldFZlcnNpb25SZXF1ZXN0GiEuc2FwcGhpbGxvbi52MS5HZXRWZXJzaW9uUmVzcG9uc2ViBnByb3RvMw");

/**
 * Represents application version information.
 * The version string typically follows Semantic Versioning.
 *
 * @generated from message sapphillon.v1.Version
 */
export type Version = Message<"sapphillon.v1.Version"> & {
  /**
   * The version of the application.
   * Format: "vMAJOR.MINOR.PATCH" with optional pre-release or build metadata
   * (e.g., "v1.2.3", "v1.2.3-alpha-1", "v1.2.3-beta.1").
   *
   * @generated from field: string version = 1;
   */
  version: string;
};

/**
 * Describes the message sapphillon.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_sapphillon_v1_version, 0);

/**
 * Request for GetVersion.
 * This message is intentionally empty to allow future extensibility without breaking changes.
 *
 * @generated from message sapphillon.v1.GetVersionRequest
 */
export type GetVersionRequest = Message<"sapphillon.v1.GetVersionRequest"> & {
};

/**
 * Describes the message sapphillon.v1.GetVersionRequest.
 * Use `create(GetVersionRequestSchema)` to create a new message.
 */
export const GetVersionRequestSchema: GenMessage<GetVersionRequest> = /*@__PURE__*/
  messageDesc(file_sapphillon_v1_version, 1);

/**
 * Response for GetVersion.
 *
 * @generated from message sapphillon.v1.GetVersionResponse
 */
export type GetVersionResponse = Message<"sapphillon.v1.GetVersionResponse"> & {
  /**
   * The current application version.
   *
   * @generated from field: sapphillon.v1.Version version = 1;
   */
  version?: Version;
};

/**
 * Describes the message sapphillon.v1.GetVersionResponse.
 * Use `create(GetVersionResponseSchema)` to create a new message.
 */
export const GetVersionResponseSchema: GenMessage<GetVersionResponse> = /*@__PURE__*/
  messageDesc(file_sapphillon_v1_version, 2);

/**
 * Provides read-only application version information.
 * The service returns semantic version strings for display and compatibility checks.
 *
 * @generated from service sapphillon.v1.VersionService
 */
export const VersionService: GenService<{
  /**
   * Returns the current application version.
   * 
   * Behavior:
   * - Unary RPC.
   * - Guaranteed to be fast and side-effect free.
   * - Suitable for health checks or compatibility gating.
   * 
   * Errors:
   * - Typically none; may return INTERNAL if the version cannot be determined.
   *
   * @generated from rpc sapphillon.v1.VersionService.GetVersion
   */
  getVersion: {
    methodKind: "unary";
    input: typeof GetVersionRequestSchema;
    output: typeof GetVersionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sapphillon_v1_version, 0);

